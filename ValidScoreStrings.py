#  A list of all possible scorecard values when concatenating the entry strings together
#  NOTE: This list is long but saves a TON of processing time when determining whether the input is valid on an entry
#  NOTE: It would not be too difficult to procedurally generate this list, but an app like this would be better served (in my opinion) by a large data set defined out
#  NOTE: Each mapped value is a tuple the represents (calculatedScoreValue, entryCountToEnable, frameFinished, rollValues)
List = {
    '__': (0, 1, False, [0]),

    '0_': (0, 2, False, [0]),
    '1_': (1, 2, False, [1]),
    '2_': (2, 2, False, [2]),
    '3_': (3, 2, False, [3]),
    '4_': (4, 2, False, [4]),
    '5_': (5, 2, False, [5]),
    '6_': (6, 2, False, [6]),
    '7_': (7, 2, False, [7]),
    '8_': (8, 2, False, [8]),
    '9_': (9, 2, False, [9]),
    'X_': (10, 2, True, [10]),

    '00': (0, 2, True, [0,0]),
    '01': (1, 2, True, [0,1]),
    '02': (2, 2, True, [0,2]),
    '03': (3, 2, True, [0,3]),
    '04': (4, 2, True, [0,4]),
    '05': (5, 2, True, [0,5]),
    '06': (6, 2, True, [0,6]),
    '07': (7, 2, True, [0,7]),
    '08': (8, 2, True, [0,8]),
    '09': (9, 2, True, [0,9]),
    '0/': (10, 2, True, [0,10]),

    '10': (1, 2, True, [1,0]),
    '11': (2, 2, True, [1,1]),
    '12': (3, 2, True, [1,2]),
    '13': (4, 2, True, [1,3]),
    '14': (5, 2, True, [1,4]),
    '15': (6, 2, True, [1,5]),
    '16': (7, 2, True, [1,6]),
    '17': (8, 2, True, [1,7]),
    '18': (9, 2, True, [1,8]),
    '1/': (10, 2, True, [1,9]),

    '20': (2, 2, True, [2,0]),
    '21': (3, 2, True, [2,1]),
    '22': (4, 2, True, [2,2]),
    '23': (5, 2, True, [2,3]),
    '24': (6, 2, True, [2,4]),
    '25': (7, 2, True, [2,5]),
    '26': (8, 2, True, [2,6]),
    '27': (9, 2, True, [2,7]),
    '2/': (10, 2, True, [2,8]),
    
    '30': (3, 2, True, [3,0]),
    '31': (4, 2, True, [3,1]),
    '32': (5, 2, True, [3,2]),
    '33': (6, 2, True, [3,3]),
    '34': (7, 2, True, [3,4]),
    '35': (8, 2, True, [3,5]),
    '36': (9, 2, True, [3,6]),
    '3/': (10, 2, True, [3,7]),
    
    '40': (4, 2, True, [4,0]),
    '41': (5, 2, True, [4,1]),
    '42': (6, 2, True, [4,2]),
    '43': (7, 2, True, [4,3]),
    '44': (8, 2, True, [4,4]),
    '45': (9, 2, True, [4,5]),
    '4/': (10, 2, True, [4,6]),
    
    '50': (5, 2, True, [5,0]),
    '51': (6, 2, True, [5,1]),
    '52': (7, 2, True, [5,2]),
    '53': (8, 2, True, [5,3]),
    '54': (9, 2, True, [5,4]),
    '5/': (10, 2, True, [5,5]),
    
    '60': (6, 2, True, [6,0]),
    '61': (7, 2, True, [6,1]),
    '62': (8, 2, True, [6,2]),
    '63': (9, 2, True, [6,3]),
    '6/': (10, 2, True, [6,4]),
    
    '70': (7, 2, True, [7,0]),
    '71': (8, 2, True, [7,1]),
    '72': (9, 2, True, [7,2]),
    '7/': (10, 2, True, [7,3]),
    
    '80': (8, 2, True, [8,0]),
    '81': (9, 2, True, [8,1]),
    '8/': (10, 2, True, [8,2]),
    
    '90': (9, 2, True, [9,0]),
    '9/': (10, 2, True, [9,1]),

    '___': (0, 1, False, [0, 0]),

    '0__': (0, 2, False, [0, 0]),
    '1__': (1, 2, False, [1, 0]),
    '2__': (2, 2, False, [2, 0]),
    '3__': (3, 2, False, [3, 0]),
    '4__': (4, 2, False, [4, 0]),
    '5__': (5, 2, False, [5, 0]),
    '6__': (6, 2, False, [6, 0]),
    '7__': (7, 2, False, [7, 0]),
    '8__': (8, 2, False, [8, 0]),
    '9__': (9, 2, False, [9, 0]),
    'X__': (10, 2, False, [10, 0]),

    '00_': (0, 2, True, [0,0]),
    '01_': (1, 2, True, [0,1]),
    '02_': (2, 2, True, [0,2]),
    '03_': (3, 2, True, [0,3]),
    '04_': (4, 2, True, [0,4]),
    '05_': (5, 2, True, [0,5]),
    '06_': (6, 2, True, [0,6]),
    '07_': (7, 2, True, [0,7]),
    '08_': (8, 2, True, [0,8]),
    '09_': (9, 2, True, [0,9]),
    '0/_': (10, 3, False, [0,10]),
    '0/0': (10, 3, True, [0,10,0]),
    '0/1': (11, 3, True, [0,10,1]),
    '0/2': (12, 3, True, [0,10,2]),
    '0/3': (13, 3, True, [0,10,3]),
    '0/4': (14, 3, True, [0,10,4]),
    '0/5': (15, 3, True, [0,10,5]),
    '0/6': (16, 3, True, [0,10,6]),
    '0/7': (17, 3, True, [0,10,7]),
    '0/8': (18, 3, True, [0,10,8]),
    '0/9': (19, 3, True, [0,10,9]),
    '0/X': (20, 3, True, [0,10,10]),

    '10_': (1, 2, True, [1,0]),
    '11_': (2, 2, True, [1,1]),
    '12_': (3, 2, True, [1,2]),
    '13_': (4, 2, True, [1,3]),
    '14_': (5, 2, True, [1,4]),
    '15_': (6, 2, True, [1,5]),
    '16_': (7, 2, True, [1,6]),
    '17_': (8, 2, True, [1,7]),
    '18_': (9, 2, True, [1,8]),
    '1/_': (10, 3, False, [1,9]),
    '1/0': (10, 3, True, [1,9,0]),
    '1/1': (11, 3, True, [1,9,1]),
    '1/2': (12, 3, True, [1,9,2]),
    '1/3': (13, 3, True, [1,9,3]),
    '1/4': (14, 3, True, [1,9,4]),
    '1/5': (15, 3, True, [1,9,5]),
    '1/6': (16, 3, True, [1,9,6]),
    '1/7': (17, 3, True, [1,9,7]),
    '1/8': (18, 3, True, [1,9,8]),
    '1/9': (19, 3, True, [1,9,9]),
    '1/X': (20, 3, True, [1,9,10]),

    '20_': (2, 2, True, [2,0]),
    '21_': (3, 2, True, [2,1]),
    '22_': (4, 2, True, [2,2]),
    '23_': (5, 2, True, [2,3]),
    '24_': (6, 2, True, [2,4]),
    '25_': (7, 2, True, [2,5]),
    '26_': (8, 2, True, [2,6]),
    '27_': (9, 2, True, [2,7]),
    '2/_': (10, 3, False, [2,8]),
    '2/0': (10, 3, True, [2,8,0]),
    '2/1': (11, 3, True, [2,8,1]),
    '2/2': (12, 3, True, [2,8,2]),
    '2/3': (13, 3, True, [2,8,3]),
    '2/4': (14, 3, True, [2,8,4]),
    '2/5': (15, 3, True, [2,8,5]),
    '2/6': (16, 3, True, [2,8,6]),
    '2/7': (17, 3, True, [2,8,7]),
    '2/8': (18, 3, True, [2,8,8]),
    '2/9': (19, 3, True, [2,8,9]),
    '2/X': (20, 3, True, [2,8,10]),

    '30_': (3, 2, True, [3,0]),
    '31_': (4, 2, True, [3,1]),
    '32_': (5, 2, True, [3,2]),
    '33_': (6, 2, True, [3,3]),
    '34_': (7, 2, True, [3,4]),
    '35_': (8, 2, True, [3,5]),
    '36_': (9, 2, True, [3,6]),
    '3/_': (10, 3, False, [3,7]),
    '3/0': (10, 3, True, [3,7,0]),
    '3/1': (11, 3, True, [3,7,1]),
    '3/2': (12, 3, True, [3,7,2]),
    '3/3': (13, 3, True, [3,7,3]),
    '3/4': (14, 3, True, [3,7,4]),
    '3/5': (15, 3, True, [3,7,5]),
    '3/6': (16, 3, True, [3,7,6]),
    '3/7': (17, 3, True, [3,7,7]),
    '3/8': (18, 3, True, [3,7,8]),
    '3/9': (19, 3, True, [3,7,9]),
    '3/X': (20, 3, True, [3,7,10]),

    '40_': (4, 2, True, [4,0]),
    '41_': (5, 2, True, [4,1]),
    '42_': (6, 2, True, [4,2]),
    '43_': (7, 2, True, [4,3]),
    '44_': (8, 2, True, [4,4]),
    '45_': (9, 2, True, [4,5]),
    '4/_': (10, 3, False, [4,6]),
    '4/0': (10, 3, True, [4,6,0]),
    '4/1': (11, 3, True, [4,6,1]),
    '4/2': (12, 3, True, [4,6,2]),
    '4/3': (13, 3, True, [4,6,3]),
    '4/4': (14, 3, True, [4,6,4]),
    '4/5': (15, 3, True, [4,6,5]),
    '4/6': (16, 3, True, [4,6,6]),
    '4/7': (17, 3, True, [4,6,7]),
    '4/8': (18, 3, True, [4,6,8]),
    '4/9': (19, 3, True, [4,6,9]),
    '4/X': (20, 3, True, [4,6,10]),

    '50_': (5, 2, True, [5,0]),
    '51_': (6, 2, True, [5,1]),
    '52_': (7, 2, True, [5,2]),
    '53_': (8, 2, True, [5,3]),
    '54_': (9, 2, True, [5,4]),
    '5/_': (10, 3, False, [5,5]),
    '5/0': (10, 3, True, [5,5,0]),
    '5/1': (11, 3, True, [5,5,1]),
    '5/2': (12, 3, True, [5,5,2]),
    '5/3': (13, 3, True, [5,5,3]),
    '5/4': (14, 3, True, [5,5,4]),
    '5/5': (15, 3, True, [5,5,5]),
    '5/6': (16, 3, True, [5,5,6]),
    '5/7': (17, 3, True, [5,5,7]),
    '5/8': (18, 3, True, [5,5,8]),
    '5/9': (19, 3, True, [5,5,9]),
    '5/X': (20, 3, True, [5,5,10]),

    '60_': (6, 2, True, [6,0]),
    '61_': (7, 2, True, [6,1]),
    '62_': (8, 2, True, [6,2]),
    '63_': (9, 2, True, [6,3]),
    '6/_': (10, 3, False, [6,4]),
    '6/0': (10, 3, True, [6,4,0]),
    '6/1': (11, 3, True, [6,4,1]),
    '6/2': (12, 3, True, [6,4,2]),
    '6/3': (13, 3, True, [6,4,3]),
    '6/4': (14, 3, True, [6,4,4]),
    '6/5': (15, 3, True, [6,4,5]),
    '6/6': (16, 3, True, [6,4,6]),
    '6/7': (17, 3, True, [6,4,7]),
    '6/8': (18, 3, True, [6,4,8]),
    '6/9': (19, 3, True, [6,4,9]),
    '6/X': (20, 3, True, [6,4,10]),

    '70_': (7, 2, True, [7,0]),
    '71_': (8, 2, True, [7,1]),
    '72_': (9, 2, True, [7,2]),
    '7/_': (10, 3, False, [7,3]),
    '7/0': (10, 3, True, [7,3,0]),
    '7/1': (11, 3, True, [7,3,1]),
    '7/2': (12, 3, True, [7,3,2]),
    '7/3': (13, 3, True, [7,3,3]),
    '7/4': (14, 3, True, [7,3,4]),
    '7/5': (15, 3, True, [7,3,5]),
    '7/6': (16, 3, True, [7,3,6]),
    '7/7': (17, 3, True, [7,3,7]),
    '7/8': (18, 3, True, [7,3,8]),
    '7/9': (19, 3, True, [7,3,9]),
    '7/X': (20, 3, True, [7,3,10]),

    '80_': (8, 2, True, [8,0]),
    '81_': (9, 2, True, [8,1]),
    '8/_': (10, 3, False, [8,2]),
    '8/0': (10, 3, True, [8,2,0]),
    '8/1': (11, 3, True, [8,2,1]),
    '8/2': (12, 3, True, [8,2,2]),
    '8/3': (13, 3, True, [8,2,3]),
    '8/4': (14, 3, True, [8,2,4]),
    '8/5': (15, 3, True, [8,2,5]),
    '8/6': (16, 3, True, [8,2,6]),
    '8/7': (17, 3, True, [8,2,7]),
    '8/8': (18, 3, True, [8,2,8]),
    '8/9': (19, 3, True, [8,2,9]),
    '8/X': (20, 3, True, [8,2,10]),

    '90_': (9, 2, True, [9,0]),
    '9/_': (10, 3, False, [9,1]),
    '9/0': (10, 3, True, [9,1,0]),
    '9/1': (11, 3, True, [9,1,1]),
    '9/2': (12, 3, True, [9,1,1]),
    '9/3': (13, 3, True, [9,1,1]),
    '9/4': (14, 3, True, [9,1,1]),
    '9/5': (15, 3, True, [9,1,1]),
    '9/6': (16, 3, True, [9,1,1]),
    '9/7': (17, 3, True, [9,1,1]),
    '9/8': (18, 3, True, [9,1,1]),
    '9/9': (19, 3, True, [9,1,1]),
    '9/X': (20, 3, True, [9,1,1]),

    'X0_': (10, 3, False, [10,0]),
    'X00': (10, 3, True, [10,0,0]),
    'X01': (11, 3, True, [10,0,1]),
    'X02': (12, 3, True, [10,0,2]),
    'X03': (13, 3, True, [10,0,3]),
    'X04': (14, 3, True, [10,0,4]),
    'X05': (15, 3, True, [10,0,5]),
    'X06': (16, 3, True, [10,0,6]),
    'X07': (17, 3, True, [10,0,7]),
    'X08': (18, 3, True, [10,0,8]),
    'X09': (19, 3, True, [10,0,9]),
    'X0/': (20, 3, True, [10,0,10]),

    'X1_': (11, 3, False, [10,1]),
    'X10': (11, 3, True, [10,1,0]),
    'X11': (12, 3, True, [10,1,1]),
    'X12': (13, 3, True, [10,1,2]),
    'X13': (14, 3, True, [10,1,3]),
    'X14': (15, 3, True, [10,1,4]),
    'X15': (16, 3, True, [10,1,5]),
    'X16': (17, 3, True, [10,1,6]),
    'X17': (18, 3, True, [10,1,7]),
    'X18': (19, 3, True, [10,1,8]),
    'X1/': (20, 3, True, [10,1,9]),

    'X2_': (12, 3, False, [10,2]),
    'X20': (12, 3, True, [10,2,0]),
    'X21': (13, 3, True, [10,2,1]),
    'X22': (14, 3, True, [10,2,2]),
    'X23': (15, 3, True, [10,2,3]),
    'X24': (16, 3, True, [10,2,4]),
    'X25': (17, 3, True, [10,2,5]),
    'X26': (18, 3, True, [10,2,6]),
    'X27': (19, 3, True, [10,2,7]),
    'X2/': (20, 3, True, [10,2,8]),

    'X3_': (13, 3, False, [10,3]),
    'X30': (13, 3, True, [10,3,0]),
    'X31': (14, 3, True, [10,3,1]),
    'X32': (15, 3, True, [10,3,2]),
    'X33': (16, 3, True, [10,3,3]),
    'X34': (17, 3, True, [10,3,4]),
    'X35': (18, 3, True, [10,3,5]),
    'X36': (19, 3, True, [10,3,6]),
    'X3/': (20, 3, True, [10,3,7]),

    'X4_': (14, 3, False, [10,4]),
    'X40': (14, 3, True, [10,4,0]),
    'X41': (15, 3, True, [10,4,1]),
    'X42': (16, 3, True, [10,4,2]),
    'X43': (17, 3, True, [10,4,3]),
    'X44': (18, 3, True, [10,4,4]),
    'X45': (19, 3, True, [10,4,5]),
    'X4/': (20, 3, True, [10,4,6]),

    'X5_': (15, 3, False, [10,5]),
    'X50': (15, 3, True, [10,5,0]),
    'X51': (16, 3, True, [10,5,1]),
    'X52': (17, 3, True, [10,5,2]),
    'X53': (18, 3, True, [10,5,3]),
    'X54': (19, 3, True, [10,5,4]),
    'X5/': (20, 3, True, [10,5,5]),

    'X6_': (16, 3, False, [10,6]),
    'X60': (16, 3, True, [10,6,0]),
    'X61': (17, 3, True, [10,6,1]),
    'X62': (18, 3, True, [10,6,2]),
    'X63': (19, 3, True, [10,6,3]),
    'X6/': (20, 3, True, [10,6,4]),

    'X7_': (17, 3, False, [10,7]),
    'X70': (17, 3, True, [10,7,0]),
    'X71': (18, 3, True, [10,7,1]),
    'X72': (19, 3, True, [10,7,2]),
    'X7/': (20, 3, True, [10,7,3]),

    'X8_': (18, 3, False, [10,8]),
    'X80': (18, 3, True, [10,8,0]),
    'X81': (19, 3, True, [10,8,1]),
    'X8/': (20, 3, True, [10,8,2]),

    'X9_': (19, 3, False, [10,9]),
    'X90': (19, 3, True, [10,9,0]),
    'X9/': (20, 3, True, [10,9,1]),

    'XX_': (20, 3, False, [10,10]),
    'XX0': (20, 3, True, [10,10,0]),
    'XX1': (21, 3, True, [10,10,1]),
    'XX2': (22, 3, True, [10,10,2]),
    'XX3': (23, 3, True, [10,10,3]),
    'XX4': (24, 3, True, [10,10,4]),
    'XX5': (25, 3, True, [10,10,5]),
    'XX6': (26, 3, True, [10,10,6]),
    'XX7': (27, 3, True, [10,10,7]),
    'XX8': (28, 3, True, [10,10,8]),
    'XX9': (29, 3, True, [10,10,9]),
    'XXX': (30, 3, True, [10,10,10]),
}

#  NOTE: I could have used a class instead of a tuple, but I want to ensure it's clear that I know this isn't necessary and that tuples are valid to use